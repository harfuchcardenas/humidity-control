#!/usr/bin/perl
use strict;
use warnings;
use Cwd;

# Function to navigate directories interactively
my $build_base = cwd();  # Get current working directory
sub navigate_directory {
    my $current_dir = cwd();  # Get current working directory
    print "\nCurrent Directory: $current_dir\n";

    # Open and get subdirectories
    opendir(my $dh, $current_dir) or die "Cannot open directory: $!\n";
    my @subdirs = sort grep { -d "$current_dir/$_" && !/^\./ } readdir($dh);
    closedir($dh);

    # If no subdirectories exist, return current directory
    unless (@subdirs) {
        print "No subdirectories found. Storing this directory...\n";
        return $current_dir;
    }

    # List subdirectories for selection
    print "You're building Zephyr OS, and you need to choose a source directory, select a subdirectory:\n";
    for (my $i = 0; $i < @subdirs; $i++) {
        print "$i: $subdirs[$i]\n";
    }

    # User input selection
    print "Select a subdirectory by number or press Enter to confirm: ";
    my $choice = <STDIN>;
    chomp($choice);

    # If user presses Enter, store current directory
    if ($choice eq '') {
        print "Source path: $current_dir\n";
        return $current_dir;
    }

    # Validate user input
    if ($choice =~ /^\d+$/ && $choice >= 0 && $choice < @subdirs) {
        my $selected_dir = $subdirs[$choice];
        chdir("$current_dir/$selected_dir") or die "Failed to enter '$selected_dir': $!\n";
        return navigate_directory();  # Recursively call function
    } else {
        print "Invalid selection. Try again!\n";
        return navigate_directory();  # Retry selection
    }
}

# Start navigation from 'zephyrproject'
chdir("zephyrproject") or die "Failed to enter 'zephyrproject': $!\n";

# Store final directory choice
my $src_dir = navigate_directory(); #Correct directory of source code.

# Output stored directory for later use
print "\nPress Enter to continue...";
<STDIN>;  # Waits for user input before continuing

#Get pwd via cwd
my $current_dir = $build_base; # Stores the current directory
my $status = system("bash -c 'dpkg -s python3-venv >/dev/null 2>&1'");
$current_dir .= "/zephyrproject";
# Step 1: Create the Python virtual environment
my $venv_name = ".venv";

#(west init zephyrproject || echo \"Zephyr already initialized\") &&

if ($status == 0) {
    print "✅ python3-venv is installed. Building...\n";
    system("bash -c '
    python3 -m venv $venv_name &&
    source .venv/bin/activate &&
    pip install west &&
    cd ../../../.. &&
    if [ -d .west ]; then echo \"Workspace already initialized.\"; else west init && west update; fi &&
    west update &&
    west zephyr-export &&
    west packages pip --install &&
    cd $current_dir/zephyr &&
    west sdk install &&
    west build -p always -b nrf7002dk/nrf5340/cpuapp --source-dir $src_dir --build-dir $current_dir/zephyr/build &&
    deactivate'");
} else {
    print "❌ python3-venv is NOT installed. Installing...\n";
    system("bash -c '
    sudo apt install python3-venv &&
    python3 -m venv $venv_name &&
    source zephyrproject/.venv/bin/activate &&
    pip install west &&
    cd ../../../.. &&
    if [ -d .west ]; then echo \"Workspace already initialized.\"; else west init && west update; fi &&
    west update &&
    west zephyr-export &&
    west packages pip --install &&
    cd $current_dir/zephyr &&
    west sdk install &&
    west build -p always -b nrf7002dk/nrf5340/cpuapp --source-dir $src_dir --build-dir $current_dir/zephyr/build &&
    deactivate'");
}
system("echo 'Virtual environment deactivated'");
exit 0;
