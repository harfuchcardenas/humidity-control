#!/usr/bin/perl
use strict;
use warnings;
use Cwd;

# Function to navigate directories interactively
sub navigate_directory {
    my $current_dir = cwd();  # Get current working directory
    print "\nCurrent Directory: $current_dir\n";

    # Open and get subdirectories
    opendir(my $dh, $current_dir) or die "Cannot open directory: $!\n";
    my @subdirs = sort grep { -d "$current_dir/$_" && !/^\./ } readdir($dh);
    closedir($dh);

    # If no subdirectories exist, return current directory
    unless (@subdirs) {
        print "No subdirectories found. Storing this directory...\n";
        return $current_dir;
    }

    # List subdirectories for selection
    print "You're building Zephyr OS, and you need to choose a source directory, select a subdirectory:\n";
    for (my $i = 0; $i < @subdirs; $i++) {
        print "$i: $subdirs[$i]\n";
    }

    # User input selection
    print "Select a subdirectory by number or press Enter to confirm: ";
    my $choice = <STDIN>;
    chomp($choice);

    # If user presses Enter, store current directory
    if ($choice eq '') {
        print "Source path: $current_dir\n";
        return $current_dir;
    }

    # Validate user input
    if ($choice =~ /^\d+$/ && $choice >= 0 && $choice < @subdirs) {
        my $selected_dir = $subdirs[$choice];
        chdir("$current_dir/$selected_dir") or die "Failed to enter '$selected_dir': $!\n";
        return navigate_directory();  # Recursively call function
    } else {
        print "Invalid selection. Try again!\n";
        return navigate_directory();  # Retry selection
    }
}
# List of dependencies
my @packages = qw(
    git cmake ninja-build gperf
    ccache dfu-util device-tree-compiler wget
    python3-dev python3-pip python3-setuptools python3-tk python3-wheel xz-utils file
    make gcc gcc-multilib g++-multilib libsdl2-dev libmagic1
);

# Track missing packages
my @missing;

foreach my $package (@packages) {
    my $status = `dpkg -l | grep -w $package`;
    if ($status) {
        print "$package is installed.\n";
    } else {
        print "$package is NOT installed.\n";
        push @missing, $package;
    }
}

# Install missing packages
if (@missing) {
    print "\nThe following packages are missing: @missing\n";
    print "Do you want to install them? (y/n): ";
    my $answer = <STDIN>;
    chomp $answer;

    if ($answer eq 'y') {
        system("sudo apt-get update");
        system("sudo apt-get install --no-install-recommends @missing");
    } else {
        print "Installation aborted.\n";
    }
} else {
    print "\nAll dependencies are installed!\n";
}

#Get pwd via cwd
my $current_dir = cwd(); # Get current working directory
print "CURRENT_DIR: $current_dir";
my $status = system("bash -c 'dpkg -s python3-venv >/dev/null 2>&1'");
$current_dir .= "/zephyrproject";

<STDIN>;  # Waits for user input before continuing

# Output stored directory for later use
print "\nPress Enter to continue...";
<STDIN>;
# Start navigation from 'zephyrproject'
#chdir("zephyrproject") or die "Failed to enter 'zephyrproject': $!\n";
print "âœ… python3-venv is installed. Building...\n";
system("bash -c '
python3 -m venv $current_dir/.venv &&
pwd &&
source $current_dir/.venv/bin/activate &&
cd zephyrproject/ &&
pip install west &&
if [ -d .west ]; then echo \"Workspace already initialized.\"; else west init && west update; fi &&
west update &&
west zephyr-export &&
west packages pip --install &&
cd $current_dir/zephyr &&
west sdk install &&
west build -p always -b nrf7002dk/nrf5340/cpuapp --source-dir $current_dir/zephyr/samples/basic/blinky --build-dir $current_dir/zephyr/build &&
deactivate'");
system("echo 'Virtual environment deactivated'");
exit 0;
